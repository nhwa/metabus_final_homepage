{"version":3,"sources":["../../metabus_homepage_final/src/assets/arrow/arrow-down.svg","../../metabus_homepage_final/src/components/Section/index.js","../../metabus_homepage_final/src/pages/Home/Intro.js","../../metabus_homepage_final/src/utils/image.js","../../metabus_homepage_final/src/assets/glb/iphone-11.glb","../../metabus_homepage_final/src/assets/glb/macbook-pro.glb","../../metabus_homepage_final/src/components/Model/deviceModels.js","../../metabus_homepage_final/src/components/Model/index.js","../../metabus_homepage_final/src/components/Divider/index.js","../../metabus_homepage_final/src/pages/Home/ProjectSummary.js","../../metabus_homepage_final/src/components/Link/index.js","../../metabus_homepage_final/src/pages/Home/Profile.js","../../metabus_homepage_final/src/pages/Home/Contact.js","../../metabus_homepage_final/src/components/Footer/index.js","../../metabus_homepage_final/src/assets/project_summary/metabus_filter.jpg","../../metabus_homepage_final/src/assets/project_summary/metabus_filter1.png","../../metabus_homepage_final/src/assets/project_summary/metabus_filter_large1.png","../../metabus_homepage_final/src/assets/project_summary/metabus_filter2.jpg","../../metabus_homepage_final/src/assets/project_summary/metabus_filter_large2.jpg","../../metabus_homepage_final/src/pages/Home/index.js","../../metabus_homepage_final/src/assets/fonts/Inter-Bold.woff2","../../metabus_homepage_final/src/components/Heading/index.js","../../metabus_homepage_final/src/components/DecoderText/index.js","../../metabus_homepage_final/src/components/Text/index.js","../../metabus_homepage_final/src/utils/three.js"],"names":["_path","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgArrowDown","title","titleId","props","svgRef","stroke","width","height","viewBox","ref","id","d","strokeWidth","fill","ForwardRef","Section","forwardRef","as","Component","children","className","rest","classNames","DisplacementSphere","lazy","Intro","sectionRef","disciplines","scrollIndicatorHidden","theme","useTheme","disciplineIndex","setDisciplineIndex","useState","windowSize","useWindowSize","prevTheme","usePrevious","introLabel","slice","join","currentDisciplines","filter","item","index","useInterval","themeId","useEffect","tabIndex","Transition","appear","prerender","in","timeout","onEnter","reflow","status","fallback","DecoderText","text","start","delay","Heading","level","VisuallyHidden","style","tokens","base","durationXS","TransitionGroup","component","map","enter","exit","wordStatus","durationL","media","tablet","async","getImageFromSrcSet","src","srcSet","sizes","Promise","resolve","reject","Error","tempImage","Image","srcset","onLoad","removeEventListener","currentSrc","addEventListener","error","ModelAnimationType","models","phone","url","iphone11","position","x","y","z","animation","laptop","macbookPro","MeshType","Model","show","showDelay","cameraPosition","enableControls","alt","modelData","setModelData","loaded","setLoaded","container","useRef","canvas","camera","textureLoader","modelLoader","modelGroup","scene","renderer","shadowGroup","renderTarget","renderTargetBlur","shadowCamera","depthMaterial","horizontalBlurMaterial","verticalBlurMaterial","plane","lights","blurPlane","fillPlane","isInViewport","useInViewport","threshold","reduceMotion","usePrefersReducedMotion","clientWidth","clientHeight","current","WebGLRenderer","alpha","antialias","powerPreference","setPixelRatio","setSize","outputEncoding","sRGBEncoding","physicallyCorrectLights","PerspectiveCamera","set","Scene","TextureLoader","GLTFLoader","Group","ambientLight","AmbientLight","keyLight","DirectionalLight","fillLight","forEach","light","add","rotateX","Math","PI","renderTargetSize","WebGLRenderTarget","texture","generateMipmaps","planeGeometry","PlaneBufferGeometry","planeMaterial","MeshBasicMaterial","opacity","transparent","Mesh","scale","visible","fillMaterial","color","OrthographicCamera","planeWidth","planeHeight","rotation","MeshDepthMaterial","userData","darkness","value","onBeforeCompile","shader","uniforms","fragmentShader","replace","depthTest","depthWrite","ShaderMaterial","HorizontalBlurShader","VerticalBlurShader","applyScreenTexture","node","encoding","minFilter","LinearFilter","magFilter","flipY","anisotropy","capabilities","getMaxAnisotropy","initTexture","material","Color","modelConfigPromises","model","loadFullResTexture","gltf","placeholder","all","loadAsync","traverse","convertSRGBToLinear","name","image","fullSize","renderFrame","positionVector","Vector3","toArray","startPosition","endPosition","modelValue","chain","spring","from","to","stiffness","damping","restSpeed","frameNode","find","startRotation","MathUtils","degToRad","endRotation","getModelAnimation","removeLights","cleanScene","cleanRenderer","blurShadow","useCallback","amount","tDiffuse","h","setRenderTarget","render","v","initialBackground","background","overrideMaterial","blurAmount","introSprings","loadedModels","handleModelLoad","modelAnimation","push","loadScene","stop","rotationSpring","rotationSpringValue","onMouseMove","event","innerWidth","innerHeight","window","clientX","clientY","get","velocity","getVelocity","mass","handleResize","aspect","updateProjectionMatrix","numToMs","role","Divider","lineWidth","lineHeight","notchWidth","notchHeight","collapseDelay","collapsed","defaultProps","ProjectSummary","description","buttonText","buttonLink","alternate","isMobile","indexText","phoneSizes","laptopSizes","renderDetails","Text","Button","iconHoverShift","href","iconEnd","renderPreview","type","isVisible","deviceModels","textures","VALID_EXT","Link","rel","secondary","isValidExtension","includes","split","pop","isAnchor","relValue","undefined","targetValue","RouterLink","onMouseUp","blurOnMouseUp","ProfileText","size","Profile","ContactTitle","ContactText","weight","NaverMapAPI","ncpClientId","loading","mapDivId","defaultCenter","lat","lng","defaultZoom","shape","coords","Contact","Footer","Date","getFullYear","Home","useRouteTransition","hash","state","useLocation","initHash","visibleSections","setVisibleSections","setScrollIndicatorHidden","intro","projectOne","details","contact","prefersReducedMotion","revealSections","sectionObserver","IntersectionObserver","entries","observer","entry","isIntersecting","section","unobserve","prevSections","rootMargin","indicatorObserver","observe","disconnect","hasEntered","supportsNativeSmoothScroll","document","documentElement","scrollObserver","scrollTimeout","handleHashchange","scroll","clearTimeout","hashSections","hashString","element","behavior","top","offsetTop","setTimeout","focus","left","scrollTo","Helmet","content","crossorigin","metabus_filter","metabus_filterLarge","metabus_filterPlaceholder","metabus_filter2","metabus_filterLarge2","align","clampedLevel","min","max","InterBold","glyphs","CharType","startDelay","output","containerInstance","renderOutput","characterMap","innerHTML","springValue","rand","floor","random","shuffle","memo","object","isMesh","geometry","dispose","isMaterial","cleanMaterial","keys","forceContextLoss","parent","remove"],"mappings":"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","file":"static/js/4.19eb9652.chunk.js","sourcesContent":["var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgArrowDown({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    stroke: \"currentColor\",\n    width: 43,\n    height: 15,\n    viewBox: \"0 0 43 15\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1 1l20.5 12L42 1\",\n    strokeWidth: 2,\n    fill: \"none\"\n  })));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowDown);\nexport default __webpack_public_path__ + \"static/media/arrow-down.e74c092f.svg\";\nexport { ForwardRef as ReactComponent };","import { forwardRef } from 'react';\r\nimport classNames from 'classnames';\r\nimport './index.css';\r\n\r\nconst Section = forwardRef(\r\n  ({ as: Component = 'div', children, className, ...rest }, ref) => (\r\n    <Component className={classNames('section', className)} ref={ref} {...rest}>\r\n      {children}\r\n    </Component>\r\n  )\r\n);\r\n\r\nexport default Section;\r\n","import { Suspense, lazy, useEffect, useState, Fragment } from 'react';\r\nimport classNames from 'classnames';\r\nimport { TransitionGroup, Transition } from 'react-transition-group';\r\nimport DecoderText from 'components/DecoderText';\r\nimport { useInterval, usePrevious, useWindowSize } from 'hooks';\r\nimport { reflow } from 'utils/transition';\r\nimport prerender from 'utils/prerender';\r\nimport { media } from 'utils/style';\r\nimport { ReactComponent as ArrowDown } from 'assets/arrow/arrow-down.svg';\r\nimport { tokens } from 'components/ThemeProvider/theme';\r\nimport Heading from 'components/Heading';\r\nimport Section from 'components/Section';\r\nimport { useTheme } from 'components/ThemeProvider';\r\nimport VisuallyHidden from 'components/VisuallyHidden';\r\nimport './Intro.css';\r\n\r\nconst DisplacementSphere = lazy(() => import('pages/Home/DisplacementSphere'));\r\n\r\nfunction Intro({ id, sectionRef, disciplines, scrollIndicatorHidden, ...rest }) {\r\n  const theme = useTheme();\r\n  const [disciplineIndex, setDisciplineIndex] = useState(0);\r\n  const windowSize = useWindowSize();\r\n  const prevTheme = usePrevious(theme);\r\n  const introLabel = [disciplines.slice(0, -1).join(', '), disciplines.slice(-1)[0]].join(\r\n    ', and '\r\n  );\r\n  const currentDisciplines = disciplines.filter(\r\n    (item, index) => index === disciplineIndex\r\n  );\r\n  const titleId = `${id}-title`;\r\n\r\n  useInterval(\r\n    () => {\r\n      const index = (disciplineIndex + 1) % disciplines.length;\r\n      setDisciplineIndex(index);\r\n    },\r\n    5000,\r\n    theme.themeId\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (prevTheme && prevTheme.themeId !== theme.themeId) {\r\n      setDisciplineIndex(0);\r\n    }\r\n  }, [theme.themeId, prevTheme]);\r\n\r\n  return (\r\n    <Section\r\n      className=\"intro\"\r\n      as=\"section\"\r\n      ref={sectionRef}\r\n      id={id}\r\n      aria-labelledby={titleId}\r\n      tabIndex={-1}\r\n      {...rest}\r\n    >\r\n      <Transition\r\n        key={theme.themeId}\r\n        appear={!prerender}\r\n        in={!prerender}\r\n        timeout={3000}\r\n        onEnter={reflow}\r\n      >\r\n        {status => (\r\n          <Fragment>\r\n            {!prerender && (\r\n              <Suspense fallback={null}>\r\n                <DisplacementSphere />\r\n              </Suspense>\r\n            )}\r\n            <header className=\"intro__text\">\r\n              <h1\r\n                className={classNames('intro__name', `intro__name--${status}`)}\r\n                id={titleId}\r\n              >\r\n                <DecoderText text=\"METABUS\" start={!prerender} delay={300} />\r\n              </h1>\r\n              <Heading level={0} as=\"h2\" className=\"intro__title\">\r\n                <VisuallyHidden className=\"intro__title-label\">{`Designer + ${introLabel}`}</VisuallyHidden>\r\n                <span\r\n                  aria-hidden\r\n                  className={classNames('intro__title-row', {\r\n                    'intro__title-row--hidden': prerender,\r\n                  })}\r\n                >\r\n                  <span\r\n                    className={classNames(\r\n                      'intro__title-word',\r\n                      `intro__title-word--${status}`\r\n                    )}\r\n                    style={{ '--delay': tokens.base.durationXS }}\r\n                  >\r\n                    Look Again At That Dot\r\n                  </span>\r\n                  {/* <span\r\n                    className={classNames(\r\n                      'intro__title-line',\r\n                      `intro__title-line--${status}`\r\n                    )}\r\n                  /> */}\r\n                </span>\r\n                <TransitionGroup\r\n                  className={classNames('intro__title-row', {\r\n                    'intro__title-row--hidden': prerender,\r\n                  })}\r\n                  component=\"span\"\r\n                >\r\n                  {currentDisciplines.map(item => (\r\n                    <Transition\r\n                      appear\r\n                      timeout={{ enter: 3000, exit: 2000 }}\r\n                      key={item}\r\n                      onEnter={reflow}\r\n                    >\r\n                      {wordStatus => (\r\n                        <span\r\n                          aria-hidden\r\n                          className={classNames(\r\n                            'intro__title-word',\r\n                            'intro__title-word--plus',\r\n                            `intro__title-word--${wordStatus}`\r\n                          )}\r\n                          style={{ '--delay': tokens.base.durationL }}\r\n                        >\r\n                          {item}\r\n                        </span>\r\n                      )}\r\n                    </Transition>\r\n                  ))}\r\n                </TransitionGroup>\r\n              </Heading>\r\n            </header>\r\n            {windowSize.width > media.tablet && (\r\n              <div\r\n                className={classNames(\r\n                  'intro__scroll-indicator',\r\n                  `intro__scroll-indicator--${status}`,\r\n                  { 'intro__scroll-indicator--hidden': scrollIndicatorHidden }\r\n                )}\r\n                status={status}\r\n              />\r\n            )}\r\n            {windowSize.width <= media.tablet && (\r\n              <div\r\n                className={classNames(\r\n                  'intro__mobile-scroll-indicator',\r\n                  `intro__mobile-scroll-indicator--${status}`,\r\n                  { 'intro__mobile-scroll-indicator--hidden': scrollIndicatorHidden }\r\n                )}\r\n              >\r\n                <ArrowDown aria-hidden />\r\n              </div>\r\n            )}\r\n          </Fragment>\r\n        )}\r\n      </Transition>\r\n    </Section>\r\n  );\r\n}\r\n\r\nexport default Intro;\r\n","/**\r\n * Uses the browser's image loading to get the correct image src from a srcSet\r\n */\r\nexport async function getImageFromSrcSet({ src, srcSet, sizes }) {\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      if (!src && !srcSet) {\r\n        throw new Error('No image src or srcSet provided');\r\n      }\r\n\r\n      const tempImage = new Image();\r\n\r\n      if (src) {\r\n        tempImage.src = src;\r\n      }\r\n\r\n      if (srcSet) {\r\n        tempImage.srcset = srcSet;\r\n      }\r\n\r\n      if (sizes) {\r\n        tempImage.sizes = sizes;\r\n      }\r\n\r\n      const onLoad = () => {\r\n        tempImage.removeEventListener('load', onLoad);\r\n        const source = tempImage.currentSrc;\r\n        resolve(source);\r\n      };\r\n\r\n      tempImage.addEventListener('load', onLoad);\r\n    } catch (error) {\r\n      reject(`Error loading ${srcSet}: ${error}`);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Generates a transparent png of a given width and height\r\n */\r\nexport function generateImage(width = 1, height = 1) {\r\n  const canvas = document.createElement('canvas');\r\n  const ctx = canvas.getContext('2d');\r\n\r\n  canvas.width = width;\r\n  canvas.height = height;\r\n\r\n  ctx.fillStyle = 'rgba(0, 0, 0, 0)';\r\n  ctx.fillRect(0, 0, width, height);\r\n  const image = canvas.toDataURL('image/png', '');\r\n  canvas.remove();\r\n  return image;\r\n}\r\n\r\n/**\r\n * Use native image srcSet resolution for video sources\r\n */\r\nexport async function resolveVideoSrcFromSrcSet(srcSet) {\r\n  const sources = srcSet.split(', ').map(srcString => {\r\n    const [src, width] = srcString.split(' ');\r\n    const image = generateImage(Number(width.replace('w', '')));\r\n    return { src, image, width };\r\n  });\r\n\r\n  const fakeSrcSet = sources.map(({ image, width }) => `${image} ${width}`).join(', ');\r\n  const fakeSrc = await getImageFromSrcSet({ srcSet: fakeSrcSet });\r\n\r\n  const videoSrc = sources.find(src => src.image === fakeSrc);\r\n  return videoSrc.src;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/iphone-11.dfa3acae.glb\";","export default __webpack_public_path__ + \"static/media/macbook-pro.29527f3f.glb\";","import iphone11 from 'assets/glb/iphone-11.glb';\r\nimport macbookPro from 'assets/glb/macbook-pro.glb';\r\n\r\nexport const ModelAnimationType = {\r\n  SpringUp: 'spring-up',\r\n  LaptopOpen: 'laptop-open',\r\n};\r\n\r\nconst models = {\r\n  phone: {\r\n    url: iphone11,\r\n    width: 374,\r\n    height: 512,\r\n    position: { x: 0, y: 0, z: 0 },\r\n    animation: ModelAnimationType.SpringUp,\r\n  },\r\n  laptop: {\r\n    url: macbookPro,\r\n    width: 1280,\r\n    height: 800,\r\n    position: { x: 0, y: 0, z: 0 },\r\n    animation: ModelAnimationType.LaptopOpen,\r\n  },\r\n};\r\n\r\nexport default models;\r\n","import { useEffect, useCallback, useRef, useState } from 'react';\r\nimport classNames from 'classnames';\r\nimport {\r\n  sRGBEncoding,\r\n  LinearFilter,\r\n  Color,\r\n  TextureLoader,\r\n  Vector3,\r\n  MathUtils,\r\n  Group,\r\n  AmbientLight,\r\n  DirectionalLight,\r\n  WebGLRenderer,\r\n  PerspectiveCamera,\r\n  Scene,\r\n  WebGLRenderTarget,\r\n  PlaneBufferGeometry,\r\n  MeshBasicMaterial,\r\n  Mesh,\r\n  OrthographicCamera,\r\n  MeshDepthMaterial,\r\n  ShaderMaterial,\r\n} from 'three';\r\nimport { HorizontalBlurShader } from 'three/examples/jsm/shaders/HorizontalBlurShader.js';\r\nimport { VerticalBlurShader } from 'three/examples/jsm/shaders/VerticalBlurShader.js';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\r\nimport { delay, chain, spring, value } from 'popmotion';\r\nimport { getImageFromSrcSet } from 'utils/image';\r\nimport { useInViewport, usePrefersReducedMotion } from 'hooks';\r\nimport { cleanScene, cleanRenderer, removeLights } from 'utils/three';\r\nimport { ModelAnimationType } from './deviceModels';\r\nimport { numToMs } from 'utils/style';\r\nimport './index.css';\r\n\r\nconst MeshType = {\r\n  Frame: 'Frame',\r\n  Logo: 'Logo',\r\n  Screen: 'Screen',\r\n};\r\n\r\nconst Model = ({\r\n  models,\r\n  show = true,\r\n  showDelay = 0,\r\n  cameraPosition = { x: 0, y: 0, z: 8 },\r\n  enableControls,\r\n  style,\r\n  className,\r\n  alt,\r\n  ...rest\r\n}) => {\r\n  const [modelData, setModelData] = useState();\r\n  const [loaded, setLoaded] = useState(false);\r\n  const container = useRef();\r\n  const canvas = useRef();\r\n  const camera = useRef();\r\n  const textureLoader = useRef();\r\n  const modelLoader = useRef();\r\n  const modelGroup = useRef();\r\n  const scene = useRef();\r\n  const renderer = useRef();\r\n  const shadowGroup = useRef();\r\n  const renderTarget = useRef();\r\n  const renderTargetBlur = useRef();\r\n  const shadowCamera = useRef();\r\n  const depthMaterial = useRef();\r\n  const horizontalBlurMaterial = useRef();\r\n  const verticalBlurMaterial = useRef();\r\n  const plane = useRef();\r\n  const lights = useRef();\r\n  const blurPlane = useRef();\r\n  const fillPlane = useRef();\r\n  const isInViewport = useInViewport(container, false, { threshold: 0.4 });\r\n  const reduceMotion = usePrefersReducedMotion();\r\n\r\n  useEffect(() => {\r\n    const { clientWidth, clientHeight } = container.current;\r\n\r\n    renderer.current = new WebGLRenderer({\r\n      canvas: canvas.current,\r\n      alpha: true,\r\n      antialias: false,\r\n      powerPreference: 'high-performance',\r\n    });\r\n\r\n    renderer.current.setPixelRatio(2);\r\n    renderer.current.setSize(clientWidth, clientHeight);\r\n    renderer.current.outputEncoding = sRGBEncoding;\r\n    renderer.current.physicallyCorrectLights = true;\r\n\r\n    camera.current = new PerspectiveCamera(36, clientWidth / clientHeight, 0.1, 100);\r\n    camera.current.position.set(cameraPosition.x, cameraPosition.y, cameraPosition.z);\r\n    scene.current = new Scene();\r\n\r\n    textureLoader.current = new TextureLoader();\r\n    modelLoader.current = new GLTFLoader();\r\n    modelGroup.current = new Group();\r\n\r\n    // Lighting\r\n    const ambientLight = new AmbientLight(0xffffff, 1.2);\r\n    const keyLight = new DirectionalLight(0xffffff, 1.1);\r\n    const fillLight = new DirectionalLight(0xffffff, 0.8);\r\n\r\n    fillLight.position.set(-6, 2, 2);\r\n    keyLight.position.set(0.5, 0, 0.866);\r\n    lights.current = [ambientLight, keyLight, fillLight];\r\n    lights.current.forEach(light => scene.current.add(light));\r\n\r\n    // The shadow container, if you need to move the plane just move this\r\n    shadowGroup.current = new Group();\r\n    scene.current.add(shadowGroup.current);\r\n    shadowGroup.current.position.set(0, 0, -0.8);\r\n    shadowGroup.current.rotateX(Math.PI / 2);\r\n\r\n    const renderTargetSize = 512;\r\n    const planeWidth = 8;\r\n    const planeHeight = 8;\r\n    const cameraHeight = 1.5;\r\n    const shadowOpacity = 0.8;\r\n    const shadowDarkness = 3;\r\n\r\n    // The render target that will show the shadows in the plane texture\r\n    renderTarget.current = new WebGLRenderTarget(renderTargetSize, renderTargetSize);\r\n    renderTarget.current.texture.generateMipmaps = false;\r\n\r\n    // The render target that we will use to blur the first render target\r\n    renderTargetBlur.current = new WebGLRenderTarget(renderTargetSize, renderTargetSize);\r\n    renderTargetBlur.current.texture.generateMipmaps = false;\r\n\r\n    // Make a plane and make it face up\r\n    const planeGeometry = new PlaneBufferGeometry(planeWidth, planeHeight).rotateX(\r\n      Math.PI / 2\r\n    );\r\n\r\n    const planeMaterial = new MeshBasicMaterial({\r\n      map: renderTarget.current.texture,\r\n      opacity: shadowOpacity,\r\n      transparent: true,\r\n    });\r\n\r\n    plane.current = new Mesh(planeGeometry, planeMaterial);\r\n    // The y from the texture is flipped!\r\n    plane.current.scale.y = -1;\r\n    shadowGroup.current.add(plane.current);\r\n\r\n    // The plane onto which to blur the texture\r\n    blurPlane.current = new Mesh(planeGeometry);\r\n    blurPlane.current.visible = false;\r\n    shadowGroup.current.add(blurPlane.current);\r\n\r\n    // The plane with the color of the ground\r\n    const fillMaterial = new MeshBasicMaterial({\r\n      color: 0xffffff,\r\n      opacity: 0,\r\n      transparent: true,\r\n    });\r\n\r\n    fillPlane.current = new Mesh(planeGeometry, fillMaterial);\r\n    fillPlane.current.rotateX(Math.PI);\r\n    fillPlane.current.position.y -= 0.00001;\r\n    shadowGroup.current.add(fillPlane.current);\r\n\r\n    // The camera to render the depth material from\r\n    shadowCamera.current = new OrthographicCamera(\r\n      -planeWidth / 2,\r\n      planeWidth / 2,\r\n      planeHeight / 2,\r\n      -planeHeight / 2,\r\n      0,\r\n      cameraHeight\r\n    );\r\n    // Get the camera to look up\r\n    shadowCamera.current.rotation.x = Math.PI / 2;\r\n    shadowGroup.current.add(shadowCamera.current);\r\n\r\n    // Like MeshDepthMaterial, but goes from black to transparent\r\n    depthMaterial.current = new MeshDepthMaterial();\r\n    depthMaterial.current.userData.darkness = { value: shadowDarkness };\r\n    depthMaterial.current.onBeforeCompile = shader => {\r\n      shader.uniforms.darkness = depthMaterial.current.userData.darkness;\r\n      shader.fragmentShader = `\r\n        uniform float darkness;\r\n        ${shader.fragmentShader.replace(\r\n          'gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );',\r\n          'gl_FragColor = vec4( vec3( 0.0 ), ( 1.0 - fragCoordZ ) * darkness );'\r\n        )}\r\n      `;\r\n    };\r\n    depthMaterial.current.depthTest = false;\r\n    depthMaterial.current.depthWrite = false;\r\n\r\n    horizontalBlurMaterial.current = new ShaderMaterial(HorizontalBlurShader);\r\n    horizontalBlurMaterial.current.depthTest = false;\r\n\r\n    verticalBlurMaterial.current = new ShaderMaterial(VerticalBlurShader);\r\n    verticalBlurMaterial.current.depthTest = false;\r\n\r\n    const applyScreenTexture = async (texture, node) => {\r\n      texture.encoding = sRGBEncoding;\r\n      texture.minFilter = LinearFilter;\r\n      texture.magFilter = LinearFilter;\r\n      texture.flipY = false;\r\n      texture.anisotropy = renderer.current.capabilities.getMaxAnisotropy();\r\n      texture.generateMipmaps = false;\r\n\r\n      // Decode the texture to prevent jank on first render\r\n      await renderer.current.initTexture(texture);\r\n\r\n      node.material.color = new Color(0xffffff);\r\n      node.material.transparent = false;\r\n      node.material.map = texture;\r\n    };\r\n\r\n    // Build an array of promises to fetch and apply models & animations\r\n    const modelConfigPromises = models.map(async (model, index) => {\r\n      const { texture, position, url } = model;\r\n      let loadFullResTexture;\r\n\r\n      const [gltf, placeholder] = await Promise.all([\r\n        await modelLoader.current.loadAsync(url),\r\n        await textureLoader.current.loadAsync(texture.placeholder),\r\n      ]);\r\n\r\n      gltf.scene.traverse(async node => {\r\n        if (node.material) {\r\n          node.material.color = new Color(0x1f2025);\r\n          node.material.color.convertSRGBToLinear();\r\n        }\r\n\r\n        if (node.name === MeshType.Screen) {\r\n          applyScreenTexture(placeholder, node);\r\n          loadFullResTexture = async () => {\r\n            const image = await getImageFromSrcSet(texture);\r\n            const fullSize = await textureLoader.current.loadAsync(image);\r\n            await applyScreenTexture(fullSize, node);\r\n          };\r\n        }\r\n      });\r\n\r\n      modelGroup.current.add(gltf.scene);\r\n\r\n      const animation = getModelAnimation({\r\n        model,\r\n        gltf,\r\n        position,\r\n        reduceMotion,\r\n        renderFrame,\r\n        index,\r\n        showDelay,\r\n      });\r\n\r\n      return { ...animation, loadFullResTexture };\r\n    });\r\n\r\n    setModelData(modelConfigPromises);\r\n\r\n    return () => {\r\n      removeLights(lights.current);\r\n      cleanScene(scene.current);\r\n      cleanRenderer(renderer.current);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const blurShadow = useCallback(amount => {\r\n    blurPlane.current.visible = true;\r\n\r\n    // Blur horizontally and draw in the renderTargetBlur\r\n    blurPlane.current.material = horizontalBlurMaterial.current;\r\n    blurPlane.current.material.uniforms.tDiffuse.value = renderTarget.current.texture;\r\n    horizontalBlurMaterial.current.uniforms.h.value = amount * (1 / 256);\r\n\r\n    renderer.current.setRenderTarget(renderTargetBlur.current);\r\n    renderer.current.render(blurPlane.current, shadowCamera.current);\r\n\r\n    // Blur vertically and draw in the main renderTarget\r\n    blurPlane.current.material = verticalBlurMaterial.current;\r\n    blurPlane.current.material.uniforms.tDiffuse.value = renderTargetBlur.current.texture;\r\n    verticalBlurMaterial.current.uniforms.v.value = amount * (1 / 256);\r\n\r\n    renderer.current.setRenderTarget(renderTarget.current);\r\n    renderer.current.render(blurPlane.current, shadowCamera.current);\r\n\r\n    blurPlane.current.visible = false;\r\n  }, []);\r\n\r\n  // Handle render passes for a single frame\r\n  const renderFrame = useCallback(() => {\r\n    const blurAmount = 5;\r\n\r\n    // Remove the background\r\n    const initialBackground = scene.current.background;\r\n    scene.current.background = null;\r\n\r\n    // Force the depthMaterial to everything\r\n    // cameraHelper.visible = false;\r\n    scene.current.overrideMaterial = depthMaterial.current;\r\n\r\n    // Render to the render target to get the depths\r\n    renderer.current.setRenderTarget(renderTarget.current);\r\n    renderer.current.render(scene.current, shadowCamera.current);\r\n\r\n    // And reset the override material\r\n    scene.current.overrideMaterial = null;\r\n\r\n    blurShadow(blurAmount);\r\n\r\n    // A second pass to reduce the artifacts\r\n    // (0.4 is the minimum blur amout so that the artifacts are gone)\r\n    blurShadow(blurAmount * 0.4);\r\n\r\n    // Reset and render the normal scene\r\n    renderer.current.setRenderTarget(null);\r\n    scene.current.background = initialBackground;\r\n\r\n    renderer.current.render(scene.current, camera.current);\r\n  }, [blurShadow]);\r\n\r\n  useEffect(() => {\r\n    let introSprings = [];\r\n\r\n    if (!modelData) return;\r\n\r\n    scene.current.add(modelGroup.current);\r\n\r\n    const loadScene = async () => {\r\n      const loadedModels = await Promise.all(modelData);\r\n\r\n      setLoaded(true);\r\n\r\n      const handleModelLoad = loadedModels.map(async model => {\r\n        // Start animation\r\n        if (model.animation) {\r\n          const modelAnimation = model.animation.start(model.modelValue);\r\n          introSprings.push(modelAnimation);\r\n        }\r\n\r\n        if (reduceMotion) {\r\n          renderFrame();\r\n        }\r\n\r\n        // Load full res screen texture\r\n        await model.loadFullResTexture();\r\n\r\n        // Render the loaded texture\r\n        if (reduceMotion) {\r\n          renderFrame();\r\n        }\r\n      });\r\n\r\n      await Promise.all(handleModelLoad);\r\n    };\r\n\r\n    if (show) {\r\n      loadScene();\r\n    }\r\n\r\n    return () => {\r\n      for (const spring of introSprings) {\r\n        spring.stop();\r\n      }\r\n    };\r\n  }, [modelData, reduceMotion, renderFrame, show]);\r\n\r\n  // Handle mouse move animation\r\n  useEffect(() => {\r\n    let rotationSpring;\r\n    let rotationSpringValue;\r\n\r\n    const onMouseMove = event => {\r\n      const { rotation } = modelGroup.current;\r\n      const { innerWidth, innerHeight } = window;\r\n\r\n      const position = {\r\n        x: (event.clientX - innerWidth / 2) / innerWidth,\r\n        y: (event.clientY - innerHeight / 2) / innerHeight,\r\n      };\r\n\r\n      if (!rotationSpringValue) {\r\n        rotationSpringValue = value({ x: rotation.x, y: rotation.y }, ({ x, y }) => {\r\n          rotation.set(x, y, rotation.z);\r\n          renderFrame();\r\n        });\r\n      }\r\n\r\n      rotationSpring = spring({\r\n        from: rotationSpringValue.get(),\r\n        to: { x: position.y / 2, y: position.x / 2 },\r\n        stiffness: 40,\r\n        damping: 40,\r\n        velocity: rotationSpringValue.getVelocity(),\r\n        restSpeed: 0.00001,\r\n        mass: 1.4,\r\n      }).start(rotationSpringValue);\r\n    };\r\n\r\n    if (isInViewport && !reduceMotion) {\r\n      window.addEventListener('mousemove', onMouseMove);\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener('mousemove', onMouseMove);\r\n      rotationSpring?.stop();\r\n    };\r\n  }, [isInViewport, reduceMotion, renderFrame]);\r\n\r\n  // Handle window resize\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      if (!container.current) return;\r\n\r\n      const { clientWidth, clientHeight } = container.current;\r\n\r\n      renderer.current.setSize(clientWidth, clientHeight);\r\n      camera.current.aspect = clientWidth / clientHeight;\r\n      camera.current.updateProjectionMatrix();\r\n\r\n      renderFrame();\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    handleResize();\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, [renderFrame]);\r\n\r\n  return (\r\n    <div\r\n      className={classNames('model', { 'model--loaded': loaded }, className)}\r\n      style={{ '--delay': numToMs(showDelay), ...style }}\r\n      ref={container}\r\n      role=\"img\"\r\n      aria-label={alt}\r\n      {...rest}\r\n    >\r\n      <canvas className=\"model__canvas\" ref={canvas} />\r\n    </div>\r\n  );\r\n};\r\n\r\n// Get custom model animation\r\nfunction getModelAnimation({ model, gltf, reduceMotion, renderFrame, index, showDelay }) {\r\n  const positionVector = new Vector3(\r\n    model.position.x,\r\n    model.position.y,\r\n    model.position.z\r\n  );\r\n\r\n  if (reduceMotion) {\r\n    gltf.scene.position.set(...positionVector.toArray());\r\n    return;\r\n  }\r\n\r\n  // Simple slide up animation\r\n  if (model.animation === ModelAnimationType.SpringUp) {\r\n    const startPosition = new Vector3(\r\n      positionVector.x,\r\n      positionVector.y - 1,\r\n      positionVector.z\r\n    );\r\n    const endPosition = positionVector;\r\n\r\n    gltf.scene.position.set(...startPosition.toArray());\r\n\r\n    const modelValue = value(gltf.scene.position, ({ x, y, z }) => {\r\n      gltf.scene.position.set(x, y, z);\r\n      renderFrame();\r\n    });\r\n\r\n    const animation = chain(\r\n      delay(300 * index + showDelay * 0.6),\r\n      spring({\r\n        from: startPosition,\r\n        to: endPosition,\r\n        stiffness: 60,\r\n        damping: 16,\r\n        restSpeed: 0.001,\r\n      })\r\n    );\r\n\r\n    return { animation, modelValue };\r\n  }\r\n\r\n  // Laptop open animation\r\n  if (model.animation === ModelAnimationType.LaptopOpen) {\r\n    const frameNode = gltf.scene.children.find(node => node.name === MeshType.Frame);\r\n    const startRotation = new Vector3(MathUtils.degToRad(90), 0, 0);\r\n    const endRotation = new Vector3(0, 0, 0);\r\n\r\n    gltf.scene.position.set(...positionVector.toArray());\r\n    frameNode.rotation.set(...startRotation.toArray());\r\n\r\n    const modelValue = value(frameNode.rotation, ({ x, y, z }) => {\r\n      frameNode.rotation.set(x, y, z);\r\n      renderFrame();\r\n    });\r\n\r\n    const animation = chain(\r\n      delay(300 * index + showDelay + 200),\r\n      spring({\r\n        from: startRotation,\r\n        to: endRotation,\r\n        stiffness: 50,\r\n        damping: 14,\r\n        restSpeed: 0.001,\r\n      })\r\n    );\r\n\r\n    return { animation, modelValue };\r\n  }\r\n}\r\n\r\nexport default Model;\r\n","import classNames from 'classnames';\r\nimport { numToMs } from 'utils/style';\r\nimport './index.css';\r\n\r\nconst Divider = ({\r\n  lineWidth,\r\n  lineHeight,\r\n  notchWidth,\r\n  notchHeight,\r\n  collapseDelay,\r\n  collapsed,\r\n  className,\r\n  style,\r\n}) => (\r\n  <div\r\n    className={classNames('divider', className)}\r\n    style={{\r\n      '--lineWidth': lineWidth,\r\n      '--lineHeight': lineHeight,\r\n      '--notchWidth': notchWidth,\r\n      '--notchHeight': notchHeight,\r\n      '--collapseDelay': numToMs(collapseDelay),\r\n      ...style,\r\n    }}\r\n  >\r\n    <div\r\n      className={classNames('divider__line', { 'divider__line--collapsed': collapsed })}\r\n    />\r\n    <div\r\n      className={classNames('divider__notch', { 'divider__notch--collapsed': collapsed })}\r\n      style={{ '--collapseDelay': numToMs(collapseDelay + 160) }}\r\n    />\r\n  </div>\r\n);\r\n\r\nDivider.defaultProps = {\r\n  lineWidth: '100%',\r\n  lineHeight: '2px',\r\n  notchWidth: '90px',\r\n  notchHeight: '10px',\r\n  collapsed: false,\r\n  collapseDelay: 0,\r\n};\r\n\r\nexport default Divider;\r\n","import { Fragment } from 'react';\r\nimport classNames from 'classnames';\r\nimport { Transition } from 'react-transition-group';\r\nimport Section from 'components/Section';\r\nimport { Button } from 'components/Button';\r\nimport Model from 'components/Model';\r\nimport Divider from 'components/Divider';\r\nimport { useWindowSize } from 'hooks';\r\nimport { reflow, isVisible } from 'utils/transition';\r\nimport { media } from 'utils/style';\r\nimport deviceModels from 'components/Model/deviceModels';\r\nimport Heading from 'components/Heading';\r\nimport Text from 'components/Text';\r\nimport './ProjectSummary.css';\r\n\r\nconst ProjectSummary = ({\r\n  id,\r\n  visible,\r\n  sectionRef,\r\n  index,\r\n  title,\r\n  description,\r\n  model,\r\n  buttonText,\r\n  buttonLink,\r\n  alternate,\r\n  ...rest\r\n}) => {\r\n  const { width } = useWindowSize();\r\n  const titleId = `${id}-title`;\r\n  const isMobile = width <= media.tablet;\r\n  const indexText = index < 10 ? `0${index}` : index;\r\n  const phoneSizes = `(max-width: ${media.tablet}px) 30vw, 20vw`;\r\n  const laptopSizes = `(max-width: ${media.tablet}px) 80vw, 40vw`;\r\n\r\n  const renderDetails = status => (\r\n    <div className=\"project-summary__details\">\r\n      <div aria-hidden className=\"project-summary__index\">\r\n        <Divider\r\n          notchWidth=\"64px\"\r\n          notchHeight=\"8px\"\r\n          collapsed={status !== 'entered'}\r\n          collapseDelay={1000}\r\n        />\r\n        <span\r\n          className={classNames(\r\n            'project-summary__index-number',\r\n            `project-summary__index-number--${status}`\r\n          )}\r\n        >\r\n          {indexText}\r\n        </span>\r\n      </div>\r\n      <Heading\r\n        level={3}\r\n        as=\"h2\"\r\n        className={classNames(\r\n          'project-summary__title',\r\n          `project-summary__title--${status}`\r\n        )}\r\n        id={titleId}\r\n      >\r\n        {title}\r\n      </Heading>\r\n      <Text\r\n        className={classNames(\r\n          'project-summary__description',\r\n          `project-summary__description--${status}`\r\n        )}\r\n      >\r\n        {description}\r\n      </Text>\r\n      <div\r\n        className={classNames(\r\n          'project-summary__button',\r\n          `project-summary__button--${status}`\r\n        )}\r\n      >\r\n        <Button iconHoverShift href={buttonLink} iconEnd=\"arrowRight\">\r\n          {buttonText}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderPreview = status => (\r\n    <div className=\"project-summary__preview\">\r\n      {model.type === 'laptop' && (\r\n        <Fragment>\r\n          <Model\r\n            className={classNames(\r\n              'project-summary__model',\r\n              'project-summary__model--laptop'\r\n            )}\r\n            alt={model.alt}\r\n            cameraPosition={{ x: 0, y: 0, z: 8 }}\r\n            showDelay={800}\r\n            show={isVisible(status)}\r\n            models={[\r\n              {\r\n                ...deviceModels.laptop,\r\n                texture: {\r\n                  ...model.textures[0],\r\n                  sizes: laptopSizes,\r\n                },\r\n              },\r\n            ]}\r\n          />\r\n        </Fragment>\r\n      )}\r\n      {model.type === 'phone' && (\r\n        <Fragment>\r\n          <Model\r\n            className={classNames(\r\n              'project-summary__model',\r\n              'project-summary__model--phone'\r\n            )}\r\n            alt={model.alt}\r\n            cameraPosition={{ x: 0, y: 0, z: 11.5 }}\r\n            showDelay={500}\r\n            show={isVisible(status)}\r\n            models={[\r\n              {\r\n                ...deviceModels.phone,\r\n                position: { x: -0.6, y: 1.1, z: 0 },\r\n                texture: {\r\n                  ...model.textures[0],\r\n                  sizes: phoneSizes,\r\n                },\r\n              },\r\n              {\r\n                ...deviceModels.phone,\r\n                position: { x: 0.6, y: -0.5, z: 0.3 },\r\n                texture: {\r\n                  ...model.textures[1],\r\n                  sizes: phoneSizes,\r\n                },\r\n              },\r\n            ]}\r\n          />\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Section\r\n      className={classNames('project-summary', {\r\n        'project-summary--alternate': alternate,\r\n        'project-summary--first': index === '01',\r\n      })}\r\n      as=\"section\"\r\n      aria-labelledby={titleId}\r\n      ref={sectionRef}\r\n      id={id}\r\n      tabIndex={-1}\r\n      {...rest}\r\n    >\r\n      <div className=\"project-summary__content\">\r\n        <Transition in={visible} timeout={0} onEnter={reflow}>\r\n          {status => (\r\n            <Fragment>\r\n              {!alternate && !isMobile && (\r\n                <Fragment>\r\n                  {renderDetails(status)}\r\n                  {renderPreview(status)}\r\n                </Fragment>\r\n              )}\r\n              {(alternate || isMobile) && (\r\n                <Fragment>\r\n                  {renderPreview(status)}\r\n                  {renderDetails(status)}\r\n                </Fragment>\r\n              )}\r\n            </Fragment>\r\n          )}\r\n        </Transition>\r\n      </div>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default ProjectSummary;\r\n","import { Link as RouterLink } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport { blurOnMouseUp } from 'utils/focus';\r\nimport './index.css';\r\n\r\n// File extensions that can be linked to\r\nconst VALID_EXT = ['txt', 'png', 'jpg'];\r\n\r\nconst Link = ({ rel, target, children, secondary, className, href, as, ...rest }) => {\r\n  const isValidExtension = VALID_EXT.includes(href?.split('.').pop());\r\n  const isAnchor = href?.includes('://') || href?.[0] === '#' || isValidExtension;\r\n  const relValue = rel || (isAnchor ? 'noreferrer noopener' : undefined);\r\n  const targetValue = target || (isAnchor ? '_blank' : undefined);\r\n  const Component = as || (isAnchor ? 'a' : RouterLink);\r\n\r\n  return (\r\n    <Component\r\n      className={classNames('link', className, { 'link--secondary': secondary })}\r\n      rel={relValue}\r\n      href={isAnchor ? href : undefined}\r\n      to={!isAnchor ? href : undefined}\r\n      target={targetValue}\r\n      onMouseUp={blurOnMouseUp}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Component>\r\n  );\r\n};\r\n\r\nexport default Link;\r\n","import { Fragment } from 'react';\r\nimport classNames from 'classnames';\r\nimport { Transition } from 'react-transition-group';\r\nimport Link from 'components/Link';\r\nimport DecoderText from 'components/DecoderText';\r\nimport Section from 'components/Section';\r\nimport { reflow } from 'utils/transition';\r\nimport Heading from 'components/Heading';\r\nimport Text from 'components/Text';\r\nimport './Profile.css';\r\n\r\nconst ProfileText = ({ status, titleId }) => (\r\n  <Fragment>\r\n    <Heading\r\n      className={classNames('profile__title', `profile__title--${status}`)}\r\n      level={3}\r\n      id={titleId}\r\n    >\r\n      <DecoderText text=\"We are Metabus\" start={status !== 'exited'} delay={500} />\r\n    </Heading>\r\n    <Text\r\n      className={classNames('profile__description', `profile__description--${status}`)}\r\n      size=\"l\"\r\n    >\r\n      We're Metabus, currently Lorem ipsum dolor sit amet, consectetur adipiscing elit,\r\n      sed do eiusmod tempor incididunt ut labore et dolore magna aliqua\r\n      <Link href=\"#\"> US </Link>. Ut enim ad minim veniam, quis nostrud exercitation\r\n      ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\r\n      reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\r\n      Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt\r\n      mollit anim id est laborum my <Link href=\"#\">METABUS WORLD</Link>.\r\n    </Text>\r\n    <Text\r\n      className={classNames('profile__description', `profile__description--${status}`)}\r\n      size=\"l\"\r\n    >\r\n      Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\r\n      ex ea\r\n      <Link href=\"\"> commodo consequat</Link>. Ut enim ad minim veniam, quis nostrud\r\n      exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute\r\n      irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\r\n      pariatur.\r\n    </Text>\r\n  </Fragment>\r\n);\r\n\r\nconst Profile = ({ id, visible, sectionRef }) => {\r\n  const titleId = `${id}-title`;\r\n\r\n  return (\r\n    <Section\r\n      className=\"profile\"\r\n      as=\"section\"\r\n      id={id}\r\n      ref={sectionRef}\r\n      aria-labelledby={titleId}\r\n      tabIndex={-1}\r\n    >\r\n      <Transition in={visible} timeout={0} onEnter={reflow}>\r\n        {status => (\r\n          <div className=\"profile__content\">\r\n            <div className=\"profile__column\">\r\n              <ProfileText status={status} titleId={titleId} />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Transition>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { Fragment } from 'react';\r\nimport classNames from 'classnames';\r\nimport { Transition } from 'react-transition-group';\r\nimport { Button } from 'components/Button';\r\nimport DecoderText from 'components/DecoderText';\r\nimport Section from 'components/Section';\r\nimport { reflow } from 'utils/transition';\r\nimport Heading from 'components/Heading';\r\nimport Text from 'components/Text';\r\nimport './Contact.css';\r\nimport { RenderAfterNavermapsLoaded, NaverMap, Marker } from 'react-naver-maps';\r\n\r\nconst ContactTitle = ({ status, titleId }) => (\r\n  <Fragment>\r\n    <Heading\r\n      level={3}\r\n      className={classNames('contact__title', `contact__title--${status}`)}\r\n    >\r\n      <DecoderText text=\"Let's Meet Us\" start={status !== 'exited'} delay={500} />\r\n    </Heading>\r\n  </Fragment>\r\n);\r\n\r\nconst ContactText = ({ status, titleId }) => (\r\n  <Fragment>\r\n    <Text size=\"xl\" weight=\"bold\">\r\n      <Text size=\"l\" weight=\"medium\">\r\n        CEO\r\n      </Text>\r\n      INSEOB KIM\r\n    </Text>\r\n    <Text size=\"m\" weight=\"regular\">\r\n      010.2388.9800\r\n      <br />\r\n      metabusx@gmail.com\r\n      <br />\r\n      138-1, Yongdam-ro, Jeju-si\r\n      <br />\r\n    </Text>\r\n    <div className={classNames('contact__button', `contact__button--${status}`)}>\r\n      <Button iconHoverShift href={''} iconEnd=\"arrowRight\">\r\n        Send Email\r\n      </Button>\r\n    </div>\r\n  </Fragment>\r\n);\r\n\r\nconst NaverMapAPI = () => {\r\n  return (\r\n    <RenderAfterNavermapsLoaded\r\n      ncpClientId={'1hqa4x61ni'} // 자신의 네이버 계정에서 발급받은 Client ID\r\n      error={<p>Maps Load Error</p>}\r\n      loading={<p>Maps Loading...</p>}\r\n    >\r\n      <NaverMap\r\n        mapDivId={'maps-getting-started-uncontrolled'} // default: react-naver-map\r\n        style={{\r\n          width: '100%', // 네이버지도 가로 길이\r\n          height: '100%', // 네이버지도 세로 길이\r\n        }}\r\n        defaultCenter={{ lat: 33.508889841, lng: 126.515705804 }} // 지도 초기 위치\r\n        defaultZoom={16} // 지도 초기 확대 배율\r\n      >\r\n        <Marker\r\n          key={1}\r\n          position={{ lat: 33.508889841, lng: 126.515705804 }}\r\n          animation={2}\r\n          shape={{ coords: [0, 12, 12, 0, 24, 12, 12, 32, 0, 12], type: 'poly' }}\r\n        />\r\n      </NaverMap>\r\n    </RenderAfterNavermapsLoaded>\r\n  );\r\n};\r\n\r\nconst Contact = ({ id, visible, sectionRef }) => {\r\n  const titleId = `${id}-title`;\r\n  return (\r\n    <Section\r\n      className=\"contact\"\r\n      as=\"section\"\r\n      id={id}\r\n      ref={sectionRef}\r\n      aria-labelledby={titleId}\r\n      tabIndex={-1}\r\n    >\r\n      <Transition in={visible} timeout={0} onEnter={reflow}>\r\n        {status => (\r\n          <div className=\"contact__content\">\r\n            <div className=\"contact__column\">\r\n              <ContactTitle status={status} titleId={titleId} />\r\n              <div className=\"contact__row\">\r\n                <div className=\"contact__map\">\r\n                  <NaverMapAPI />\r\n                </div>\r\n                <div className=\"contact__text\">\r\n                  <ContactText status={status} titleId={titleId} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Transition>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import Link from 'components/Link';\r\nimport './index.css';\r\n\r\nconst Footer = () => (\r\n  <footer className=\"footer\">\r\n    <span className=\"footer__date\">{`© ${new Date().getFullYear()} METABUS.`}</span>\r\n    <Link secondary className=\"footer__link\" href=\"/humans.txt\" target=\"_self\"></Link>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/metabus_filter.e5f93107.jpg\";","export default __webpack_public_path__ + \"static/media/metabus_filter1.5ed8d630.png\";","export default __webpack_public_path__ + \"static/media/metabus_filter_large1.46f64b66.png\";","export default __webpack_public_path__ + \"static/media/metabus_filter2.1cd17356.jpg\";","export default __webpack_public_path__ + \"static/media/metabus_filter_large2.15cee34d.jpg\";","import { useState, useEffect, useRef } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport Intro from 'pages/Home/Intro';\r\nimport ProjectSummary from 'pages/Home/ProjectSummary';\r\nimport Profile from 'pages/Home/Profile';\r\nimport Contact from 'pages/Home/Contact';\r\nimport Footer from 'components/Footer';\r\nimport { usePrefersReducedMotion, useRouteTransition } from 'hooks';\r\nimport { useLocation } from 'react-router-dom';\r\nimport metabus_filterPlaceholder from 'assets/project_summary/metabus_filter.jpg';\r\nimport metabus_filter from 'assets/project_summary/metabus_filter1.png';\r\nimport metabus_filterLarge from 'assets/project_summary/metabus_filter_large1.png';\r\nimport metabus_filter2 from 'assets/project_summary/metabus_filter2.jpg';\r\nimport metabus_filterLarge2 from 'assets/project_summary/metabus_filter_large2.jpg';\r\nimport iphone11 from 'assets/glb/iphone-11.glb';\r\nimport macbookPro from 'assets/glb/macbook-pro.glb';\r\n\r\nconst disciplines = [\"That's here\", \"That's Home\", \"That's Us\"];\r\n\r\nconst Home = () => {\r\n  const { status } = useRouteTransition();\r\n  const { hash, state } = useLocation();\r\n  const initHash = useRef(true);\r\n  const [visibleSections, setVisibleSections] = useState([]);\r\n  const [scrollIndicatorHidden, setScrollIndicatorHidden] = useState(false);\r\n  const intro = useRef();\r\n  const projectOne = useRef();\r\n  const details = useRef();\r\n  const contact = useRef();\r\n  const prefersReducedMotion = usePrefersReducedMotion();\r\n\r\n  useEffect(() => {\r\n    const revealSections = [intro, projectOne, details, contact];\r\n\r\n    const sectionObserver = new IntersectionObserver(\r\n      (entries, observer) => {\r\n        entries.forEach(entry => {\r\n          if (entry.isIntersecting) {\r\n            const section = entry.target;\r\n            observer.unobserve(section);\r\n            if (visibleSections.includes(section)) return;\r\n            setVisibleSections(prevSections => [...prevSections, section]);\r\n          }\r\n        });\r\n      },\r\n      { rootMargin: '0px 0px -10% 0px' }\r\n    );\r\n\r\n    const indicatorObserver = new IntersectionObserver(\r\n      ([entry]) => {\r\n        setScrollIndicatorHidden(!entry.isIntersecting);\r\n      },\r\n      { rootMargin: '-100% 0px 0px 0px' }\r\n    );\r\n\r\n    revealSections.forEach(section => {\r\n      sectionObserver.observe(section.current);\r\n    });\r\n\r\n    indicatorObserver.observe(intro.current);\r\n\r\n    return () => {\r\n      sectionObserver.disconnect();\r\n      indicatorObserver.disconnect();\r\n    };\r\n  }, [visibleSections]);\r\n\r\n  useEffect(() => {\r\n    const hasEntered = status === 'entered';\r\n    const supportsNativeSmoothScroll = 'scrollBehavior' in document.documentElement.style;\r\n    let scrollObserver;\r\n    let scrollTimeout;\r\n\r\n    const handleHashchange = (hash, scroll) => {\r\n      clearTimeout(scrollTimeout);\r\n      const hashSections = [intro, projectOne, details, contact];\r\n      const hashString = hash.replace('#', '');\r\n      const element = hashSections.filter(item => item.current.id === hashString)[0];\r\n      if (!element) return;\r\n      const behavior = scroll && !prefersReducedMotion ? 'smooth' : 'instant';\r\n      const top = element.current.offsetTop;\r\n\r\n      scrollObserver = new IntersectionObserver(\r\n        (entries, observer) => {\r\n          const [entry] = entries;\r\n          if (entry.isIntersecting) {\r\n            scrollTimeout = setTimeout(\r\n              () => {\r\n                element.current.focus();\r\n              },\r\n              prefersReducedMotion ? 0 : 400\r\n            );\r\n            observer.unobserve(entry.target);\r\n          }\r\n        },\r\n        { rootMargin: '-20% 0px -20% 0px' }\r\n      );\r\n\r\n      scrollObserver.observe(element.current);\r\n\r\n      if (supportsNativeSmoothScroll) {\r\n        window.scroll({\r\n          top,\r\n          left: 0,\r\n          behavior,\r\n        });\r\n      } else {\r\n        window.scrollTo(0, top);\r\n      }\r\n    };\r\n\r\n    if (hash && initHash.current && hasEntered) {\r\n      handleHashchange(hash, false);\r\n      initHash.current = false;\r\n    } else if (!hash && initHash.current && hasEntered) {\r\n      window.scrollTo(0, 0);\r\n      initHash.current = false;\r\n    } else if (hasEntered) {\r\n      handleHashchange(hash, true);\r\n    }\r\n\r\n    return () => {\r\n      clearTimeout(scrollTimeout);\r\n      if (scrollObserver) {\r\n        scrollObserver.disconnect();\r\n      }\r\n    };\r\n  }, [hash, state, prefersReducedMotion, status]);\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <Helmet>\r\n        <title>METABUS</title>\r\n        <meta name=\"description\" content=\"Metabus webpage\" />\r\n        <link rel=\"prefetch\" href={iphone11} as=\"fetch\" crossorigin=\"\" />\r\n        <link rel=\"prefetch\" href={macbookPro} as=\"fetch\" crossorigin=\"\" />\r\n      </Helmet>\r\n      <Intro\r\n        id=\"intro\"\r\n        sectionRef={intro}\r\n        disciplines={disciplines}\r\n        scrollIndicatorHidden={scrollIndicatorHidden}\r\n      />\r\n      <ProjectSummary\r\n        id=\"project-1\"\r\n        sectionRef={projectOne}\r\n        visible={visibleSections.includes(projectOne.current)}\r\n        index={1}\r\n        title=\"DEEP SEA FILTER\"\r\n        description=\"You can enjoy the deep sea using filters from METABUS\"\r\n        buttonText=\"View Project\"\r\n        buttonLink=\"/projects/Filter\"\r\n        model={{\r\n          type: 'phone',\r\n          alt: 'metabus filter',\r\n          textures: [\r\n            {\r\n              src: metabus_filter,\r\n              srcSet: `${metabus_filter} 254w, ${metabus_filterLarge} 508w`,\r\n              placeholder: metabus_filterPlaceholder,\r\n            },\r\n            {\r\n              src: metabus_filter,\r\n              srcSet: `${metabus_filter2} 254w, ${metabus_filterLarge2} 508w`,\r\n              placeholder: metabus_filterPlaceholder,\r\n            },\r\n          ],\r\n        }}\r\n      />\r\n      <Profile\r\n        sectionRef={details}\r\n        visible={visibleSections.includes(details.current)}\r\n        id=\"details\"\r\n      />\r\n      <Contact\r\n        sectionRef={contact}\r\n        visible={visibleSections.includes(contact.current)}\r\n        id=\"contact\"\r\n      />\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/Inter-Bold.ec64ea57.woff2\";","import { Fragment } from 'react';\r\nimport classNames from 'classnames';\r\nimport { Helmet } from 'react-helmet';\r\nimport InterBold from 'assets/fonts/Inter-Bold.woff2';\r\nimport './index.css';\r\n\r\nconst Heading = ({\r\n  children,\r\n  level = 1,\r\n  as,\r\n  align = 'auto',\r\n  weight = 'medium',\r\n  className,\r\n  ...rest\r\n}) => {\r\n  const clampedLevel = Math.min(Math.max(level, 0), 4);\r\n  const Component = as || `h${Math.max(clampedLevel, 1)}`;\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* Conditionally load the bold font weight because we use it less frequently */}\r\n      {weight === 'bold' && (\r\n        <Helmet>\r\n          <link rel=\"preload\" href={InterBold} as=\"font\" crossorigin=\"\" />\r\n          <style>\r\n            {`\r\n              @font-face {\r\n                font-family: 'Inter';\r\n                font-weight: 700;\r\n                src: url(${InterBold}) format('woff2');\r\n                font-display: swap;\r\n              }\r\n            `}\r\n          </style>\r\n        </Helmet>\r\n      )}\r\n      <Component\r\n        className={classNames(\r\n          className,\r\n          'heading',\r\n          `heading--align-${align}`,\r\n          `heading--level-${clampedLevel}`,\r\n          `heading--weight-${weight}`\r\n        )}\r\n        {...rest}\r\n      >\r\n        {children}\r\n      </Component>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Heading;\r\n","import { useRef, useEffect, memo } from 'react';\r\nimport classNames from 'classnames';\r\nimport { usePrefersReducedMotion } from 'hooks';\r\nimport { spring, chain, delay, value } from 'popmotion';\r\nimport VisuallyHidden from 'components/VisuallyHidden';\r\nimport prerender from 'utils/prerender';\r\nimport './index.css';\r\n\r\n// prettier-ignore\r\nconst glyphs = [\r\n  '메','타','버','스','우','리','앞','길','은','꽃','길'\r\n];\r\n\r\nconst CharType = {\r\n  Glyph: 'glyph',\r\n  Value: 'value',\r\n};\r\n\r\nfunction shuffle(content, output, position) {\r\n  return content.map((value, index) => {\r\n    if (index < position) {\r\n      return { type: CharType.Value, value };\r\n    }\r\n\r\n    if (position % 1 < 0.5) {\r\n      const rand = Math.floor(Math.random() * glyphs.length);\r\n      return { type: CharType.Glyph, value: glyphs[rand] };\r\n    }\r\n\r\n    return { type: CharType.Glyph, value: output[index].value };\r\n  });\r\n}\r\n\r\nconst DecoderText = ({\r\n  text,\r\n  start = true,\r\n  delay: startDelay = 0,\r\n  className,\r\n  ...rest\r\n}) => {\r\n  const output = useRef([{ type: CharType.Glyph, value: '' }]);\r\n  const container = useRef();\r\n  const reduceMotion = usePrefersReducedMotion();\r\n\r\n  useEffect(() => {\r\n    const containerInstance = container.current;\r\n    const content = text.split('');\r\n    let animation;\r\n\r\n    const renderOutput = () => {\r\n      const characterMap = output.current.map(item => {\r\n        return `<span class=\"decoder-text__${item.type}\">${item.value}</span>`;\r\n      });\r\n\r\n      containerInstance.innerHTML = characterMap.join('');\r\n    };\r\n\r\n    const springValue = value(0, position => {\r\n      output.current = shuffle(content, output.current, position);\r\n      renderOutput();\r\n    });\r\n\r\n    if (start && !animation && !reduceMotion && !prerender) {\r\n      animation = chain(\r\n        delay(startDelay),\r\n        spring({\r\n          from: 0,\r\n          to: content.length,\r\n          stiffness: 8,\r\n          damping: 5,\r\n        })\r\n      ).start(springValue);\r\n    }\r\n\r\n    if (reduceMotion) {\r\n      output.current = content.map((value, index) => ({\r\n        type: CharType.Value,\r\n        value: content[index],\r\n      }));\r\n      renderOutput();\r\n    }\r\n\r\n    return () => {\r\n      if (animation) {\r\n        animation.stop();\r\n      }\r\n    };\r\n  }, [reduceMotion, start, startDelay, text]);\r\n\r\n  return (\r\n    <span className={classNames('decoder-text', className)} {...rest}>\r\n      <VisuallyHidden className=\"decoder-text__label\">{text}</VisuallyHidden>\r\n      <span aria-hidden className=\"decoder-text__content\" ref={container} />\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default memo(DecoderText);\r\n","import classNames from 'classnames';\r\nimport './index.css';\r\n\r\nconst Text = ({\r\n  children,\r\n  size = 'm',\r\n  as: Component = 'p',\r\n  align = 'auto',\r\n  weight = 'auto',\r\n  secondary,\r\n  className,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Component\r\n      className={classNames(\r\n        className,\r\n        'text',\r\n        `text--align-${align}`,\r\n        `text--size-${size}`,\r\n        `text--weight-${weight}`,\r\n        {\r\n          'text--secondary': secondary,\r\n        }\r\n      )}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Component>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","/**\r\n * Clean up a scene's materials and geometry\r\n */\r\nexport const cleanScene = scene => {\r\n  scene.traverse(object => {\r\n    if (!object.isMesh) return;\r\n\r\n    object.geometry.dispose();\r\n\r\n    if (object.material.isMaterial) {\r\n      cleanMaterial(object.material);\r\n    } else {\r\n      for (const material of object.material) {\r\n        cleanMaterial(material);\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Clean up and dispose of a material\r\n */\r\nexport const cleanMaterial = material => {\r\n  material.dispose();\r\n\r\n  for (const key of Object.keys(material)) {\r\n    const value = material[key];\r\n    if (value && typeof value === 'object' && 'minFilter' in value) {\r\n      value.dispose();\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Clean up and dispose of a renderer\r\n */\r\nexport const cleanRenderer = renderer => {\r\n  renderer.dispose();\r\n  renderer.forceContextLoss();\r\n  renderer = null;\r\n};\r\n\r\n/**\r\n * Clean up lights by removing them from their parent\r\n */\r\nexport const removeLights = lights => {\r\n  for (const light of lights) {\r\n    light.parent.remove(light);\r\n  }\r\n};\r\n"],"sourceRoot":""}