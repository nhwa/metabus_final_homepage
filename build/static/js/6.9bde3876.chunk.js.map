{"version":3,"sources":["../../metabus_homepage_final/src/pages/404/index.js","../../metabus_homepage_final/src/assets/fonts/Inter-Bold.woff2","../../metabus_homepage_final/src/components/Heading/index.js","../../metabus_homepage_final/src/components/DecoderText/index.js","../../metabus_homepage_final/src/components/Text/index.js"],"names":["NotFound","className","tag","name","content","appear","in","timeout","onEnter","reflow","status","classNames","level","as","text","start","delay","secondary","iconHoverShift","href","icon","Heading","children","align","weight","rest","clampedLevel","Math","min","max","Component","Helmet","rel","InterBold","crossorigin","glyphs","CharType","DecoderText","startDelay","output","useRef","type","value","container","reduceMotion","usePrefersReducedMotion","useEffect","containerInstance","current","split","animation","renderOutput","characterMap","map","item","innerHTML","join","springValue","position","index","rand","floor","random","length","shuffle","prerender","chain","spring","from","to","stiffness","damping","stop","ref","memo","Text","size"],"mappings":"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","file":"static/js/6.9bde3876.chunk.js","sourcesContent":["import { Fragment } from 'react';\r\nimport classNames from 'classnames';\r\nimport { Transition } from 'react-transition-group';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Button } from 'components/Button';\r\nimport DecoderText from 'components/DecoderText';\r\nimport { reflow } from 'utils/transition';\r\nimport Heading from 'components/Heading';\r\nimport Text from 'components/Text';\r\nimport './index.css';\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <section className=\"page-404\">\r\n      <Helmet>\r\n        <title tag=\"title\">404 | Not Found</title>\r\n        <meta name=\"description\" content=\"404 page not found. This page doesn't exist\" />\r\n      </Helmet>\r\n      <Transition appear in={true} timeout={0} onEnter={reflow}>\r\n        {status => (\r\n          <Fragment>\r\n            <div className=\"page-404__details\">\r\n              <div className=\"page-404__text\">\r\n                <Heading\r\n                  className={classNames('page-404__title', `page-404__title--${status}`)}\r\n                  level={0}\r\n                >\r\n                  404\r\n                </Heading>\r\n                <Heading\r\n                  aria-hidden\r\n                  className={classNames(\r\n                    'page-404__subheading',\r\n                    `page-404__subheading--${status}`\r\n                  )}\r\n                  as=\"h2\"\r\n                  level={3}\r\n                >\r\n                  <DecoderText\r\n                    text=\"Error: Redacted\"\r\n                    start={status !== 'exited'}\r\n                    delay={300}\r\n                  />\r\n                </Heading>\r\n                <Text\r\n                  className={classNames(\r\n                    'page-404__description',\r\n                    `page-404__description--${status}`\r\n                  )}\r\n                >\r\n                  This page could not be found. It either doesn’t exist or was deleted. Or\r\n                  perhaps you don’t exist.\r\n                </Text>\r\n                <Button\r\n                  secondary\r\n                  iconHoverShift\r\n                  className={classNames(\r\n                    'page-404__button',\r\n                    `page-404__button--${status}`\r\n                  )}\r\n                  href=\"/\"\r\n                  icon=\"chevronRight\"\r\n                >\r\n                  Back to homepage\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n      </Transition>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","export default __webpack_public_path__ + \"static/media/Inter-Bold.ec64ea57.woff2\";","import { Fragment } from 'react';\r\nimport classNames from 'classnames';\r\nimport { Helmet } from 'react-helmet';\r\nimport InterBold from 'assets/fonts/Inter-Bold.woff2';\r\nimport './index.css';\r\n\r\nconst Heading = ({\r\n  children,\r\n  level = 1,\r\n  as,\r\n  align = 'auto',\r\n  weight = 'medium',\r\n  className,\r\n  ...rest\r\n}) => {\r\n  const clampedLevel = Math.min(Math.max(level, 0), 4);\r\n  const Component = as || `h${Math.max(clampedLevel, 1)}`;\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* Conditionally load the bold font weight because we use it less frequently */}\r\n      {weight === 'bold' && (\r\n        <Helmet>\r\n          <link rel=\"preload\" href={InterBold} as=\"font\" crossorigin=\"\" />\r\n          <style>\r\n            {`\r\n              @font-face {\r\n                font-family: 'Inter';\r\n                font-weight: 700;\r\n                src: url(${InterBold}) format('woff2');\r\n                font-display: swap;\r\n              }\r\n            `}\r\n          </style>\r\n        </Helmet>\r\n      )}\r\n      <Component\r\n        className={classNames(\r\n          className,\r\n          'heading',\r\n          `heading--align-${align}`,\r\n          `heading--level-${clampedLevel}`,\r\n          `heading--weight-${weight}`\r\n        )}\r\n        {...rest}\r\n      >\r\n        {children}\r\n      </Component>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Heading;\r\n","import { useRef, useEffect, memo } from 'react';\r\nimport classNames from 'classnames';\r\nimport { usePrefersReducedMotion } from 'hooks';\r\nimport { spring, chain, delay, value } from 'popmotion';\r\nimport VisuallyHidden from 'components/VisuallyHidden';\r\nimport prerender from 'utils/prerender';\r\nimport './index.css';\r\n\r\n// prettier-ignore\r\nconst glyphs = [\r\n  '메','타','버','스','우','리','앞','길','은','꽃','길'\r\n];\r\n\r\nconst CharType = {\r\n  Glyph: 'glyph',\r\n  Value: 'value',\r\n};\r\n\r\nfunction shuffle(content, output, position) {\r\n  return content.map((value, index) => {\r\n    if (index < position) {\r\n      return { type: CharType.Value, value };\r\n    }\r\n\r\n    if (position % 1 < 0.5) {\r\n      const rand = Math.floor(Math.random() * glyphs.length);\r\n      return { type: CharType.Glyph, value: glyphs[rand] };\r\n    }\r\n\r\n    return { type: CharType.Glyph, value: output[index].value };\r\n  });\r\n}\r\n\r\nconst DecoderText = ({\r\n  text,\r\n  start = true,\r\n  delay: startDelay = 0,\r\n  className,\r\n  ...rest\r\n}) => {\r\n  const output = useRef([{ type: CharType.Glyph, value: '' }]);\r\n  const container = useRef();\r\n  const reduceMotion = usePrefersReducedMotion();\r\n\r\n  useEffect(() => {\r\n    const containerInstance = container.current;\r\n    const content = text.split('');\r\n    let animation;\r\n\r\n    const renderOutput = () => {\r\n      const characterMap = output.current.map(item => {\r\n        return `<span class=\"decoder-text__${item.type}\">${item.value}</span>`;\r\n      });\r\n\r\n      containerInstance.innerHTML = characterMap.join('');\r\n    };\r\n\r\n    const springValue = value(0, position => {\r\n      output.current = shuffle(content, output.current, position);\r\n      renderOutput();\r\n    });\r\n\r\n    if (start && !animation && !reduceMotion && !prerender) {\r\n      animation = chain(\r\n        delay(startDelay),\r\n        spring({\r\n          from: 0,\r\n          to: content.length,\r\n          stiffness: 8,\r\n          damping: 5,\r\n        })\r\n      ).start(springValue);\r\n    }\r\n\r\n    if (reduceMotion) {\r\n      output.current = content.map((value, index) => ({\r\n        type: CharType.Value,\r\n        value: content[index],\r\n      }));\r\n      renderOutput();\r\n    }\r\n\r\n    return () => {\r\n      if (animation) {\r\n        animation.stop();\r\n      }\r\n    };\r\n  }, [reduceMotion, start, startDelay, text]);\r\n\r\n  return (\r\n    <span className={classNames('decoder-text', className)} {...rest}>\r\n      <VisuallyHidden className=\"decoder-text__label\">{text}</VisuallyHidden>\r\n      <span aria-hidden className=\"decoder-text__content\" ref={container} />\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default memo(DecoderText);\r\n","import classNames from 'classnames';\r\nimport './index.css';\r\n\r\nconst Text = ({\r\n  children,\r\n  size = 'm',\r\n  as: Component = 'p',\r\n  align = 'auto',\r\n  weight = 'auto',\r\n  secondary,\r\n  className,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Component\r\n      className={classNames(\r\n        className,\r\n        'text',\r\n        `text--align-${align}`,\r\n        `text--size-${size}`,\r\n        `text--weight-${weight}`,\r\n        {\r\n          'text--secondary': secondary,\r\n        }\r\n      )}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Component>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n"],"sourceRoot":""}